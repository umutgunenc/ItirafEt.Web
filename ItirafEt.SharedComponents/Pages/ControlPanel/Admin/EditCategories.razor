@page "/admin/editcategory"
@inject ICategoryApi CategoryApi



<div class="px-1">
<div class="mt-3">
	<h1 class="text-center h3">Kategori Düzenle</h1>
</div>
<hr />
@if (!_isAnyCategory)
{
	<table class="table table-success table-striped table-hover">
		<thead>
			<tr>
				<td colspan="4" class="text-danger">@_errorMessage</td>
			</tr>
		</thead>
	</table>
}
else
{

	<div class="text-center overflow-x-auto" style="white-space: nowrap;">

		<div class="row fw-bold p-0 m-0 mb-3 flex-nowrap text-nowrap border-bottom pb-1">
			<div class="col-3 p-1" style="min-width: 180px;">Kategori Adı</div>
			<div class="col-2 p-1" style="min-width: 80px;">Aktif Mi</div>
			<div class="col-2 p-1" style="min-width: 110px;">Sıra No</div>
			<div class="col-3 p-1" style="min-width: 280px;">İkon</div>
			<div class="col-2 p-1" style="min-width: 110px;"></div>
		</div>

		@foreach (var category in _categories)
		{
			<EditForm Model="category"
					  OnValidSubmit="async () => await SaveChangesCategoryAsync(category)">
				<DataAnnotationsValidator />

				<div class="row align-items-center p-0 m-0 mb-1 flex-nowrap text-nowrap">

					<div class="col-3 p-1 ps-0" style="min-width: 180px;">
						<InputText @bind-Value="category.CategoryName" class="form-control" />
					</div>

									<div class="col-2 text-center p-1" style="min-width: 80px;">
						@if (category.isActive)
						{
							<button type="button"
									class="btn-custom-red"
									@onclick="() => ToggleActiveStatus(category)">
								Pasif Yap
							</button>
						}
						else
						{
							<button type="button"
									class="btn-custom"
									@onclick="() => ToggleActiveStatus(category)">
								Aktif Yap
							</button>
						}

						<InputCheckbox class="d-none" @bind-Value="category.isActive" />
					</div>

					<div class="col-2 text-center p-1" style="min-width: 80px;">
						<InputNumber class="form-control form-control"
									 @bind-Value="category.CategoryOrder" />
					</div>

					<div class="col-3 p-1" style="min-width: 280px;">
						<div class="d-grid gap-2" style="grid-template-columns: auto auto 1fr; align-items: center;">
							<NavLink href="https://icons.getbootstrap.com/"
									 target="_blank"
									 class="text-decoration-none"
									 title="Bootstrap ikonlarını aç">
								<i class="bi bi-question-diamond"></i>
							</NavLink>

							<i class="@category.CategoryIconUrl fs-5"></i>

							<InputText class="form-control form-control"
									   @bind-Value="category.CategoryIconUrl" />
						</div>
					</div>

							<div class="col-2 d-flex justify-content-end p-1 pe-0" style="min-width: 110px;">
						<button type="submit" class="btn-custom-green">Kaydet</button>
					</div>

				</div>

				<div class="text-start ps-1">
					<ValidationMessage For="@(() => category.CategoryName)" />
					<ValidationMessage For="@(() => category.CategoryOrder)" />
					<ValidationMessage For="@(() => category.CategoryIconUrl)" />
				</div>
			</EditForm>
		}
	</div>

	@* <table class="table table-success table-striped table-hover">
		<thead>
			<tr>
				<th class="text-center col-md-3">Kategori Adı</th>
				<th class="text-center col-md-2">Aktif Mi</th>
				<th class="text-center col-md-2">Sıra No</th>
				<th class="text-center col-md-3">İkon</th>
				<th class="text-center col-md-2"></th>
			</tr>
		</thead>
		<tbody>


			@foreach (var category in _categories)
			{
				<tr>
					<td colspan="5">
						<EditForm Model="category" OnValidSubmit="() => SaveChangesCategoryAsync(category)">
							<DataAnnotationsValidator />

							<div class="row align-items-center">
								<div class="col-md-3 col-12 mb-2 mb-md-0">
									<InputText class="form-control form-control-sm"
											   @bind-Value="category.CategoryName" />
									<ValidationMessage For="@(() => category.CategoryName)" />
								</div>

								<div class="col-md-2 col-12 mb-2 mb-md-0 text-center d-flex justify-content-around">
									@if (category.isActive)
									{
										<button type="button" class="col btn btn-danger" @onclick="() => ToggleActiveStatus(category)">
											Pasif Yap
										</button>

									}
									else
									{

										<button type="button" class="col btn btn-primary" @onclick="() => ToggleActiveStatus(category)">
											Aktif Yap
										</button>
									}

									<InputCheckbox class="form-check-input" @bind-Value="category.isActive" style="display:none;" />
								</div>

								<div class="col-md-2 col-12 mb-2 mb-md-0">
									<InputNumber class="form-control form-control-sm"
												 @bind-Value="category.CategoryOrder" />
									<ValidationMessage For="@(() => category.CategoryOrder)" />
								</div>

								<div class="col-md-3 col-12 mb-2 mb-md-0">
									<div class="d-flex justify-content-between align-items-center mb-1">
										<NavLink href="https://icons.getbootstrap.com/" target="_blank" class="text-decoration-none">
											<i class="bi bi-question-diamond"></i>
										</NavLink>

										<i class="@category.CategoryIconUrl"></i>

										<InputText class="form-control form-control-sm w-75"
												   @bind-Value="category.CategoryIconUrl" />
									</div>

									<ValidationMessage For="@(() => category.CategoryIconUrl)" />
								</div>



								<div class="col-md-2 col-12 mb-2 mb-md-0 text-center d-flex justify-content-around">
									<button class="col btn btn-success" type="submit">Kaydet</button>
								</div>

							</div>
						</EditForm>
					</td>
				</tr>
			}

		</tbody>
	</table> *@
}

</div>

<ModalComponent @ref="_modal" Title="Hata">
	<ChildContent>
		<div class="col text-bg-danger text-white m-3 rounded align-items-center">
			<p>@_errorMessage</p>
		</div>
	</ChildContent>
	<FooterContent>
		<button class="btn btn-primary col" @onclick="_modal.Close">Kapat</button>
	</FooterContent>
</ModalComponent>




@code {
	private List<CategoryViewModel>? _categories = new List<CategoryViewModel>();
	private ModalComponent _modal;
	private string? _errorMessage;
	private bool _isAnyCategory = false;
	// private bool _isSuccess = false;


	protected override async Task OnInitializedAsync()
	{
		await LoadCategoriesAsync();
	}

	private async Task LoadCategoriesAsync()
	{
		try
		{
			var response = await CategoryApi.GetAllCategoriesAsync();
			if (response.IsSuccess)
			{
				_categories = response.Data?
					.OrderBy(c => c.CategoryOrder)
					.ToList();
				_isAnyCategory = true;
			}
			else
			{
				_errorMessage = response.ErrorMessage;
				_isAnyCategory = false;
			}
		}
		catch (Exception ex)
		{
			_isAnyCategory = false;
			_errorMessage = ex.Message;
		}

	}

	private async Task SaveChangesCategoryAsync(CategoryViewModel dto)
	{
		try
		{
			var response = await CategoryApi.EditCategoryAsync(dto);
			if (response.IsSuccess)
			{
				await LoadCategoriesAsync();
				_errorMessage = null;
			}
			else
			{
				_errorMessage = response.ErrorMessage;
				_modal.Open();
			}
		}
		catch (Exception ex)
		{
			_errorMessage = ex.Message;
			_modal.Open();
		}
	}

	private void ToggleActiveStatus(CategoryViewModel category)
	{
		category.isActive = !category.isActive;
	}
}
