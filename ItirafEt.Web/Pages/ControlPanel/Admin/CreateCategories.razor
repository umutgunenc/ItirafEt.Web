@page "/admin/createcategory"
@inject ICategoryApi CategoryApi

<div class="px-5 py-lg-5">
	<h3>Kategori Ekle</h3>
	<hr />
	<div class="col-lg-12 mx-auto my-auto border shadow-lg">

		<EditForm Model="_model"
				  OnValidSubmit="SaveCategoryAsync">


			<DataAnnotationsValidator />

			<div class="my-3">
				<div class="d-flex mx-3">
					<label class="form-label col-lg-2 col-3">Karegori Adı: </label>
					<InputText @bind-Value="_model.CategoryName" class="form-control" />
				</div>
				<div class="d-flex mx-3">
					<ValidationMessage For="()=> _model.CategoryName" />
				</div>
			</div>
			<div class="my-3">
				<div class="d-flex mx-3">
					<label class="form-label col-lg-2 col-3">İkon : </label>
					<InputText @bind-Value="_model.CategoryIconUrl" class="form-control" />
				</div>
				<div class="d-flex mx-3">
					<ValidationMessage For="()=> _model.CategoryIconUrl" />
				</div>
			</div>
			<div class="my-3">
				<div class="d-flex mx-3">
					<label class="form-label col-lg-2 col-3">Karegori Sırası: </label>
					<InputNumber @bind-Value="_model.CategoryOrder" class="form-control" min="1" />
				</div>
				<div class="d-flex mx-3">
					<ValidationMessage For="()=> _model.CategoryOrder" />
				</div>
			</div>

			<div class="my-3">
				<div class="d-flex mx-3">
					@if (_isSuccess)
					{
						<div class="alert alert-success col">
							Kategori başarıyla eklendi.
						</div>
					}
					@if (!_isSuccess && _errorMessage != null)
					{
						<div class="alert alert-danger col">
							@_errorMessage
						</div>
					}
				</div>
			</div>

			<div class="row mb-3 mx-3">
				@if (!_isBusy)
				{
					<button type="submit" class="btn btn-success">Kaydet</button>
				}
				else
				{
					<button class="btn btn-success" type="button" disabled>
						<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
						Kayıt İşlemi Devam Ediyor. Lütfen Bekleyiniz.
					</button>
				}
			</div>
		</EditForm>
	</div>
</div>

@code {
	private CategoryViewModel _model = new();
	private bool _isBusy = false;
	private bool _isSuccess = false;
	private string? _errorMessage = null;


	private async Task SaveCategoryAsync()
	{
		if (_isBusy)
			return;

		_isBusy = true;

		try
		{

			var response = await CategoryApi.CreateCategoryAsync(_model);
			if (!response.IsSuccess)
			{
				_isSuccess = false;
				_errorMessage = response.ErrorMessage;
			}
			else
			{
				_isSuccess = true;
				_errorMessage = null;
			}
		}
		catch (Exception ex)
		{
			_isSuccess = false;
			_errorMessage = ex.Message;
		}
		finally
		{
			_isBusy = false;
		}

	}


	private void ToggleActiveStatus(CategoryViewModel category)
	{
		category.isActive = !category.isActive;		
	}
}
