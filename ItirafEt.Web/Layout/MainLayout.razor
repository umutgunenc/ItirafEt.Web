@inherits LayoutComponentBase
@inject AuthStateProvider AuthStateProvider
@inject NavigationManager NavigationManager


<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4 bg-primary-subtle d-flex flex-wrap justify-content-end align-items-center">
            <AuthorizeView Context="LoggedInContext" >
                <Authorized>

                    <AuthorizeView Roles="@allowedRoles">
                        <div class="nav-item px-3">
                            <NavLink class="nav-link" href="">
                                <span class="text-black" aria-hidden="true"><i class="bi bi-speedometer"></i> Yönetim Paneli</span>
                            </NavLink>
                        </div> 
                    </AuthorizeView>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="">
                            <span class="text-black" aria-hidden="true"><i class="bi bi-envelope"></i> Mesajlar</span>
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="">
                            <span class="text-black" aria-hidden="true">
                                <i class="bi bi-person-check"></i> @AuthStateProvider.User?.userName.ToUpper()
                            </span>
                        </NavLink>
                    </div>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" @onclick=LogOutAsync>
                            <span class="text-black" aria-hidden="true"><i class="bi bi-x-circle"></i> Çıkış Yap</span>
                        </NavLink>
                    </div>

                </Authorized>
                <NotAuthorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/auth/login">
                            <span class="text-black" aria-hidden="true"><i class="bi bi-person-circle"></i> Giriş Yap</span>
                        </NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>
        </div>
        @*  @if (AuthStateProvider.IsLoggedIn)
            {
                @if (isUserAdminastor())
                {
                    <div class="nav-item">
                        <NavLink class="nav-link" href="">
                            <span class="text-black  " aria-hidden="true"><i class="bi bi-speedometer"></i> Yönetim Paneli</span>
                        </NavLink>
                    </div>
                }
                <div class="nav-item">
                    <NavLink class="nav-link" href="">
                        <span class="text-black " aria-hidden="true"><i class="bi bi-envelope"></i> Mesajlar</span>
                    </NavLink>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="">
                        <span class="text-black " aria-hidden="true">
                            <i class="bi bi-person-check"></i> @AuthStateProvider.User?.userName.ToUpper()
                        </span>
                    </NavLink>
                </div>
                <div class="nav-item">
                    <NavLink class="nav-link" href="">
                        <span class="text-black " aria-hidden="true"><i class="bi bi-x-circle"></i> Çıkış Yap</span>
                    </NavLink>
                </div>


            }
            else
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="/auth/login">
                        <span class="text-black fs-5" aria-hidden="true"><i class="bi bi-person-circle"></i> Giriş Yap</span>
                    </NavLink>
                </div>
            }
        </div> *@


        <article class="content px-4">
            @if (AuthStateProvider.IsInitializing) 
            {
                <p>Initializing State ... </p>
            }
            else
            {
                @Body
            }

        </article>
    </main>
</div>


@code{
    private string allowedRoles = string.Join(",",
        nameof(UserRole.SuperAdmin),
        nameof(UserRole.Admin),
        nameof(UserRole.Moderator));

    protected override async Task OnInitializedAsync()
    {
        while (AuthStateProvider.IsInitializing)
            await Task.Delay(500);
    }

    private async Task LogOutAsync()
    {
        await AuthStateProvider.SetLogoutAsync();
        NavigationManager.NavigateTo("/",replace:true);
    }
}
